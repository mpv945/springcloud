server:
  port: 9090
spring:
  profiles: dev
eureka: #配置详解https://www.cnblogs.com/chry/p/7992885.html
  instance:
    prefer-ip-address: true # 就可以将IP注册到Eureka Server上
    #ip-address: 127.0.0.1 # 除了网卡指定ip，还可以手动指定ip
    # 注册名默认是“IP名:应用名:应用端口名”，即${spring.cloud.client.ipAddress}:${spring.application.name}:${spring.application.instance_id:${server.port}}。
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}:@project.version@ #引用maven属性要用@@
    #hostname: ${spring.cloud.client.ipAddress} #点击注册服务的服务url能访问
  client:
    # 如果不做集群，这两个都设置成false，不然服务启动会报错，因为单台时自己只是服务端，没办法将自己注册给自己，也不能抓取信息
    register-with-eureka: false #声明是否将自己的信息注册到Eureka服务器，默认为true
    fetch-registry: false #是否到Eureka服务器中抓取注册信息,默认为true
    #enabled: false #是否开启注册客户端，默认true，一台直接关闭
    service-url:
      - defaultZone: http://localhost:${server.port}/eureka
  server:
    # 注册中心页面右上角的关键字段说明
    # Lease expiration enabled  是否开启自我保护机制,这是个配置,默认为true
    # Renews threshold    server期望在每分钟中收到的心跳次数（值：1+2*n client个数为n,此例子server且禁止自注册的情况，如果注册高可用则为2？or 为n）
    # Renews (last min)   上一分钟内收到的心跳次数。（值计算(client个数为n)：1）自注册 2 + 2*n，2）非自注册：2*n）
    #默认值为0.85。当server在15分钟内，比值低于percent，即少了15%的微服务心跳，server会进入自我保护状态，
    renewal-percent-threshold: 0.49 # 本地调试设置
    enable-self-preservation: true #自我保护模式 开关，默认为开：true
    # 不做集群设置成0；在Eureka服务器获取不到集群里对等服务器上的实例时，需要等待的时间，单位为毫秒，默认0
    #wait-time-in-ms-when-sync-empty: 0

--- #多个profiles之间使用---三个-线来表示
spring:
  profiles: test
eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
---
spring:
  profiles: rc #预生产
---
spring:
  profiles: pro #生产
